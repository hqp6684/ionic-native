{"version":3,"sources":["../../../src/@ionic-native/plugins/navigation-bar/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAGxE;;;;;;;;;;;;;;;;;GAiBG;AASH;IAAmC,iCAAiB;IAApD;;IA+BA,CAAC;IA7BC;;;;OAIG;IAMH,6BAAK,GAAL,UAAM,QAAkB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEnD;;;OAGG;IAMH,yCAAiB,GAAjB,cAAoC,MAAM,CAAC,CAAC,CAAC;IAExC,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAlBA;QALC,OAAO,CAAC;YACP,aAAa,EAAE,QAAQ;YACvB,WAAW,EAAE,SAAS;YACtB,SAAS,EAAE,SAAS;SACrB,CAAC;;;;8CACiD;IAWnD;QALC,OAAO,CAAC;YACP,aAAa,EAAE,QAAQ;YACvB,WAAW,EAAE,SAAS;YACtB,SAAS,EAAE,SAAS;SACrB,CAAC;;;;0DAC2C;IAvBlC,aAAa;QARzB,MAAM,CAAC;YACN,UAAU,EAAE,eAAe;YAC3B,MAAM,EAAE,8BAA8B;YACtC,SAAS,EAAE,eAAe;YAC1B,IAAI,EAAE,+DAA+D;YACrE,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;OAEW,aAAa,CA+BzB;IAAD,oBAAC;CA/BD,AA+BC,CA/BkC,iBAAiB,GA+BnD;SA/BY,aAAa","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n\n\n/**\n * @beta\n * @name Navigation Bar\n * @description\n * The NavigationBar plugin can you to hide and auto hide the android navigation bar.\n *\n * @usage\n * ```typescript\n * import { NavigationBar } from '@ionic-native/navigation-bar';\n *\n * constructor(private navigationBar: NavigationBar) { }\n *\n * ...\n *\n * let autoHide: boolean = true;\n * this.navigationBar.hide(autoHide);\n * ```\n */\n@Plugin({\n  pluginName: 'NavigationBar',\n  plugin: 'cordova-plugin-navigationbar',\n  pluginRef: 'navigationbar',\n  repo: 'https://github.com/cranberrygame/cordova-plugin-navigationbar',\n  platforms: ['Android']\n})\n\nexport class NavigationBar extends IonicNativePlugin {\n\n  /**\n   * hide automatically (or not) the navigation bar.\n   * @param autohide {boolean}  \n   * @return {Promise<any>}\n   */\n  @Cordova({\n    callbackStyle: 'object',\n    successName: 'success',\n    errorName: 'failure'\n  })\n  setUp(autohide?: boolean): Promise<any> { return; }\n\n  /**\n   * Hide the navigation bar. \n   * @return {Promise<any>}\n   */\n  @Cordova({\n    callbackStyle: 'object',\n    successName: 'success',\n    errorName: 'failure'\n  })\n  hideNavigationBar(): Promise<any> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}