{"version":3,"sources":["../../../src/@ionic-native/plugins/launch-review/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AASH;IAAkC,gCAAiB;IAAnD;;IAuCA,CAAC;IArCC;;;;;;;OAOG;IAEH,6BAAM,GAAN,UAAO,KAAc,IAAmB,MAAM,CAAC,CAAC,CAAC;IAEjD;;;;;;;;OAQG;IAEH,6BAAM,GAAN,cAA4B,MAAM,CAAC,CAAC,CAAC;IAErC;;;;OAIG;IAEH,wCAAiB,GAAjB,cAA+B,MAAM,CAAC,CAAC,CAAC;IAEnC,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IA3BA;QADC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,aAAa,EAAE,SAAS,EAAE,CAAC;;;;8CACpB;IAYjD;QADC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;;;;8CACK;IAQrC;QADC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;yDACf;IA/B7B,YAAY;QARxB,MAAM,CAAC;YACN,UAAU,EAAE,cAAc;YAC1B,MAAM,EAAE,uBAAuB;YAC/B,SAAS,EAAE,cAAc;YACzB,IAAI,EAAE,iDAAiD;YACvD,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,YAAY,CAuCxB;IAAD,mBAAC;CAvCD,AAuCC,CAvCiC,iBAAiB,GAuClD;SAvCY,YAAY","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @name Launch Review\n * @description\n *\n * Assists in leaving user reviews/ratings in the App Stores.\n * - Launches the platform's App Store page for the current app in order for the user to leave a review.\n * - On iOS (10.3 and above) invokes the native in-app rating dialog which allows a user to rate your app without needing to open the App Store.\n *\n * @usage\n * ```typescript\n * import { LaunchReview } from '@ionic-native/launch-review';\n *\n * constructor(private launchReview: LaunchReview) { }\n *\n * ...\n *\n * this.launchReview.launch()\n *   .then(() => console.log('Successfully launched store app');\n *\n * if(this.launchReview.isRatingSupported()){\n *   this.launchReview.rating()\n *     .then(() => console.log('Successfully launched rating dialog');\n * }\n * ```\n */\n@Plugin({\n  pluginName: 'LaunchReview',\n  plugin: 'cordova-launch-review',\n  pluginRef: 'LaunchReview',\n  repo: 'https://github.com/dpa99c/cordova-launch-review',\n  platforms: ['Android', 'iOS']\n})\n\nexport class LaunchReview extends IonicNativePlugin {\n\n  /**\n   * Launches App Store on current platform in order to leave a review for given app.\n   * @param appId {string} - (optional) the platform-specific app ID to use to open the page in the store app.\n   * If not specified, the plugin will use the app ID for the app in which the plugin is contained.\n   * On Android this is the full package name of the app. For example, for Google Maps: `com.google.android.apps.maps`\n   * On iOS this is the Apple ID of the app. For example, for Google Maps: `585027354`\n   * @returns {Promise<void>}\n   */\n  @Cordova({ platforms: ['Android', 'iOS'], callbackOrder: 'reverse' })\n  launch(appId?: string): Promise<void> { return; }\n\n  /**\n   * Invokes the native in-app rating dialog which allows a user to rate your app without needing to open the App Store.\n   * Requires iOS 10.3 and above: Calling this on any platform/version other than iOS 10.3+ will result in the error callback.\n   * Success callback will be called up to 3 times:\n   * - First: after `LaunchReview.rating()` is called and the request to show the dialog is successful. Will be passed the value `requested`.\n   * - Second: if and when the Rating dialog is actually displayed.  Will be passed the value `shown`.\n   * - Third: if and when the Rating dialog is dismissed.  Will be passed the value `dismissed`.\n   * @returns {Promise<string>}\n   */\n  @Cordova({ platforms: ['iOS'] })\n  rating(): Promise<string> { return; }\n\n  /**\n   * Indicates if the current platform/version supports in-app ratings dialog, i.e. calling LaunchReview.rating().\n   * Will return true if current platform is iOS 10.3 or above.\n   * @returns {boolean}\n   */\n  @Cordova({ platforms: ['Android', 'iOS'], sync: true })\n  isRatingSupported(): boolean { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}