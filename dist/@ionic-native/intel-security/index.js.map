{"version":3,"sources":["../../../src/@ionic-native/plugins/intel-security/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n\ndeclare const window: any;\n\nexport interface IntelSecurityDataOptions {\n  /** Non-empty string. **/\n  data: String;\n  /** Tag text.  */\n  tag?: String;\n  /** Valid secure data instance ID. */\n  extraKey?: Number;\n  /** Application access control policy. */\n  appAccessControl?: Number;\n  /** Device locality policy. */\n  deviceLocality?: Number;\n  /** Sensitivity level policy. */\n  sensitivityLevel?: Number;\n  /** Disallow sealed blob access. */\n  noStore?: Boolean;\n  /** Disallow plain-text data access. */\n  noRead?: Boolean;\n  /** Creator unique ID. */\n  creator?: Number;\n  /** Array of owners unique IDs. */\n  owners?: Number[];\n  /** List of trusted web domains. */\n  webOwners?: String[];\n}\n\n/**\n * @name Intel Security\n * @description\n * The App Security API enables the use of security properties and capabilities on the platform, using a new set of API defined for application developers. You are not required to be a security expert to make good use of the API. Key elements, such as encryption of data and establishments of capabilities, is abstracted and done by the API implementation, for you.\n *\n * For example:\n * - Use the API to store (E.g. cache) data locally, using the device non-volatile storage. Data protection/encryption will be done for you by the API implementation\n * - Establish a connection with remote server (E.g. XHR) using a protected channel. SSL/TLS establishment and usage will be done for you by the API implementation\n *\n * For more information please visit the [API documentation](https://software.intel.com/en-us/app-security-api/api).\n *\n * @usage\n * ```typescript\n * import { IntelSecurity } from '@ionic-native/intel-security';\n * ...\n * constructor(private intelSecurity: IntelSecurity) { }\n * ...\n *\n * let storageID = 'id';\n *\n * this.intelSecurity.data.createFromData({ data: 'Sample Data' })\n *   .then((instanceID: Number) => this.intelSecurity.storage.write({ id: storageId, instanceID: instanceID }))\n *   .catch((error: any) => console.log(error));\n *\n * this.intelSecurity.storage.read({id: storageID })\n *   .then((instanceID: number) => this.intelSecurity.data.getData(instanceID))\n *   .then((data: string) => console.log(data)) // Resolves to 'Sample Data'\n *   .catch((error: any) => console.log(error));\n *\n * this.intelSecurity.storage.delete({ id: storageID })\n *   .then(() => console.log('Deleted Successfully'))\n *   .catch((error: any) => console.log(error));\n * ```\n * @classes\n * IntelSecurityData\n * IntelSecurityStorage\n * @interfaces\n * IntelSecurityDataOptions\n */\n@Plugin({\n  pluginName: 'IntelSecurity',\n  plugin: 'com-intel-security-cordova-plugin',\n  pluginRef: 'intel.security',\n  repo: 'https://github.com/AppSecurityApi/com-intel-security-cordova-plugin',\n  platforms: ['Android', 'iOS', 'Windows', 'Windows Phone 8']\n})\n\nexport class IntelSecurity extends IonicNativePlugin {\n\n  /**\n   * returns an IntelSecurityStorage object\n   * @type {IntelSecurityStorage}\n   */\n  storage: IntelSecurityStorage = new IntelSecurityStorage();\n\n  /**\n   * Returns an IntelSecurityData object\n   * @type {IntelSecurityData}\n   */\n  data: IntelSecurityData = new IntelSecurityData();\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n/**\n * @hidden\n */\n@Plugin({\n  pluginName: 'IntelSecurity',\n  plugin: 'com-intel-security-cordova-plugin',\n  pluginRef: 'intel.security.secureData'\n})\nexport class IntelSecurityData {\n\n  /**\n  * This creates a new instance of secure data using plain-text data.\n  * @param options {IntelSecurityDataOptions}\n  * @returns {Promise<any>} Returns a Promise that resolves with the instanceID of the created data instance, or rejects with an error.\n  */\n  @Cordova({ otherPromise: true })\n  createFromData(options: IntelSecurityDataOptions): Promise<Number> { return; }\n\n  /**\n   * This creates a new instance of secure data (using sealed data)\n   * @param options {Object}\n   * @param options.sealedData {string} Sealed data in string format.\n   * @returns {Promise<any>} Returns a Promise that resolves with the instanceID of the created data instance, or rejects with an error.\n   */\n  @Cordova({ otherPromise: true })\n  createFromSealedData(options: { sealedData: string }): Promise<Number> { return; }\n\n  /**\n   * This returns the plain-text data of the secure data instance.\n   * @param instanceID {Number} Secure data instance ID.\n   * @returns {Promise<string>} Returns a Promise that resolves to the data as plain-text, or rejects with an error.\n   */\n  @Cordova({ otherPromise: true })\n  getData(instanceID: Number): Promise<string> { return; }\n\n  /**\n   * This returns the sealed chunk of a secure data instance.\n   * @param instanceID {any} Secure data instance ID.\n   * @returns {Promise<any>} Returns a Promise that resolves to the sealed data, or rejects with an error.\n   */\n  @Cordova({ otherPromise: true })\n  getSealedData(instanceID: any): Promise<any> { return; }\n\n  /**\n   * This returns the tag of the secure data instance.\n   * @param instanceID {any} Secure data instance ID.\n   * @returns {Promise<string>} Returns a Promise that resolves to the tag, or rejects with an error.\n   */\n  @Cordova({ otherPromise: true })\n  getTag(instanceID: any): Promise<string> { return; }\n\n  /**\n   * This returns the data policy of the secure data instance.\n   * @param instanceID {any} Secure data instance ID.\n   * @returns {Promise<any>} Returns a promise that resolves to the policy object, or rejects with an error.\n   */\n  @Cordova({ otherPromise: true })\n  getPolicy(instanceID: any): Promise<any> { return; }\n\n  /**\n   * This returns an array of the data owners unique IDs.\n   * @param instanceID {any} Secure data instance ID.\n   * @returns {Promise<Array>} Returns a promise that resolves to an array of owners' unique IDs, or rejects with an error.\n   */\n  @Cordova({ otherPromise: true })\n  getOwners(instanceID: any): Promise<Array<any>> { return; }\n\n  /**\n   * This returns the data creator unique ID.\n   * @param instanceID {any} Secure data instance ID.\n   * @returns {Promise<Number>} Returns a promsie that resolves to the creator's unique ID, or rejects with an error.\n   */\n  @Cordova({ otherPromise: true })\n  getCreator(instanceID: any): Promise<Number> { return; }\n\n  /**\n   * This returns an array of the trusted web domains of the secure data instance.\n   * @param instanceID {any} Secure data instance ID.\n   * @returns {Promise<Array>} Returns a promise that resolves to a list of web owners, or rejects with an error.\n   */\n  @Cordova({ otherPromise: true })\n  getWebOwners(instanceID: any): Promise<Array<any>> { return; }\n\n  /**\n   * This changes the extra key of a secure data instance. To successfully replace the extra key, the calling application must have sufficient access to the plain-text data.\n   * @param options {Object}\n   * @param options.instanceID {any} Secure data instance ID.\n   * @param options.extraKey {Number} Extra sealing secret for secure data instance.\n   * @returns {Promise<any>} Returns a promise that resolves with no parameters, or rejects with an error.\n   */\n  @Cordova({ otherPromise: true })\n  changeExtraKey(options: any): Promise<any> { return; }\n\n  /**\n   * This releases a secure data instance.\n   * @param instanceID {any} Secure data instance ID.\n   * @returns {Promise<any>} Returns a promise that resovles with no parameters, or rejects with an error.\n   */\n  @Cordova({ otherPromise: true })\n  destroy(instanceID: any): Promise<any> { return; }\n\n}\n\n/**\n * @hidden\n */\n@Plugin({\n  pluginName: 'IntelSecurity',\n  plugin: 'com-intel-security-cordova-plugin',\n  pluginRef: 'intel.security.secureStorage'\n})\nexport class IntelSecurityStorage {\n\n  /**\n   * This deletes a secure storage resource (indicated by id).\n   * @param options {Object}\n   * @param options.id {String} Storage resource identifier.\n   * @param [options.storageType] {Number} Storage type.\n   * @returns {Promise<any>} Returns a Promise that resolves with no parameters, or rejects with an error.\n   */\n  @Cordova({ otherPromise: true })\n  delete(options: {\n    id: string,\n    storageType?: Number\n  }): Promise<any> { return; }\n\n  /**\n   * This reads the data from secure storage (indicated by id) and creates a new secure data instance.\n   * @param options {Object}\n   * @param options.id {String} Storage resource identifier.\n   * @param [options.storageType] {Number} Storage type.\n   * @param [options.extraKey] {Number} Valid secure data instance ID.\n   * @returns {Promise<Number>} Returns a Promise that resolves with the instance ID of the created secure data instance, or rejects with an error.\n   */\n  @Cordova({ otherPromise: true })\n  read(options: {\n    id: string,\n    storageType?: Number,\n    extraKey?: Number\n  }): Promise<Number> { return; }\n\n  /**\n   * This writes the data contained in a secure data instance into secure storage.\n   * @param options {Object}\n   * @param options.id {String} Storage resource identifier.\n   * @param options.instanceID {Number} Valid secure data instance ID\n   * @param [options.storageType] {Number} Storage type.\n   * @returns {Promise<any>} Returns a Promise that resolves with no parameters, or rejects with an error.\n   */\n  @Cordova({ otherPromise: true })\n  write(options: {\n    id: String,\n    instanceID: Number,\n    storageType?: Number\n  }): Promise<any> { return; }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}