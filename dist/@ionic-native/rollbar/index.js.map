{"version":3,"sources":["../../../src/@ionic-native/plugins/rollbar/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;GAiBG;AAWH;IAA6B,2BAAiB;IAA9C;;IAeA,CAAC;IAbC;;;OAGG;IAEH,sBAAI,GAAJ,cAAuB,MAAM,CAAC,CAAC,CAAC;IAE3B,kBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,sBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAPA;QADC,OAAO,EAAE;;;;uCACsB;IAPrB,OAAO;QAVnB,MAAM,CAAC;YACN,UAAU,EAAE,SAAS;YACrB,MAAM,EAAE,iCAAiC;YACzC,SAAS,EAAE,yBAAyB;YACpC,IAAI,EAAE,oDAAoD;YAC1D,OAAO,EAAE,4KAA4K;YACrL,gBAAgB,EAAE,CAAC,sBAAsB,EAAE,qBAAqB,CAAC;YACjE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,OAAO,CAenB;IAAD,cAAC;CAfD,AAeC,CAf4B,iBAAiB,GAe7C;SAfY,OAAO","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @beta\n * @name Rollbar\n * @description\n * This plugin adds Rollbar App monitoring to your application\n *\n * @usage\n * ```typescript\n * import { Rollbar } from '@ionic-native/rollbar';\n *\n * constructor(private rollbar: Rollbar) { }\n *\n * ...\n *\n * this.rollbar.init();\n *\n * ```\n */\n@Plugin({\n  pluginName: 'Rollbar',\n  plugin: 'resgrid-cordova-plugins-rollbar',\n  pluginRef: 'cordova.plugins.Rollbar',\n  repo: 'https://github.com/Resgrid/cordova-plugins-rollbar',\n  install: 'ionic cordova plugin add resgrid-cordova-plugins-rollbar --variable ROLLBAR_ACCESS_TOKEN=\"YOUR_ROLLBAR_ACCEESS_TOKEN\" --variable ROLLBAR_ENVIRONMENT=\"ROLLBAR_ENVIRONMENT\"',\n  installVariables: ['ROLLBAR_ACCESS_TOKEN', 'ROLLBAR_ENVIRONMENT'],\n  platforms: ['Android', 'iOS']\n})\n\nexport class Rollbar extends IonicNativePlugin {\n\n  /**\n   * This function initializes the monitoring of your application\n   * @return {Promise<any>} Returns a promise that resolves when the plugin successfully initializes\n   */\n  @Cordova()\n  init(): Promise<any> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}