{"version":3,"sources":["../../../src/@ionic-native/plugins/user-agent/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;AASH;IAA+B,6BAAiB;IAAhD;;IAoCA,CAAC;IAlCC;;;;OAIG;IAEH,uBAAG,GAAH,UAAI,SAAiB;QACnB,MAAM,CAAC;IACT,CAAC;IAED;;;OAGG;IAEH,uBAAG,GAAH;QACE,MAAM,CAAC;IACT,CAAC;IAED;;;OAGG;IAEH,yBAAK,GAAL;QACE,MAAM,CAAC;IACT,CAAC;IAEI,oBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,wBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IA3BA;QADC,OAAO,EAAE;;;;wCAGT;IAOD;QADC,OAAO,EAAE;;;;wCAGT;IAOD;QADC,OAAO,EAAE;;;;0CAGT;IA5BU,SAAS;QARrB,MAAM,CAAC;YACN,UAAU,EAAE,WAAW;YACvB,MAAM,EAAE,0BAA0B;YAClC,SAAS,EAAE,mBAAmB;YAC9B,IAAI,EAAE,wDAAwD;YAC9D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,SAAS,CAoCrB;IAAD,gBAAC;CApCD,AAoCC,CApC8B,iBAAiB,GAoC/C;SApCY,SAAS","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @name User Agent\n * @description\n * The UserAgent plugin provides functions to set the HTTP  user-agent header. For more info about User-Agents, please [see the HTTP User-Agent docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent).\n *\n * Requires Cordova plugin: `cordova-useragent`. For more info, please see the [User-Agent plugin docs](https://github.com/LouisT/cordova-useragent).\n *\n * @usage\n * ```typescript\n * import { UserAgent } from '@ionic-native/user-agent';\n *\n *\n * constructor(private userAgent: UserAgent) { }\n *\n * ...\n *\n *\n * this.userAgent.set('Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36')\n *   .then((res: any) => console.log(res))\n *   .catch((error: any) => console.error(error));\n *\n * * this.userAgent.get()\n *   .then((res: any) => console.log(res))\n *   .catch((error: any) => console.error(error));\n *\n * * this.userAgent.reset()\n *   .then((res: any) => console.log(res))\n *   .catch((error: any) => console.error(error));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'UserAgent',\n  plugin: 'cordova-plugin-useragent',\n  pluginRef: 'plugins.useragent',\n  repo: 'https://github.com/danielsogl/cordova-plugin-useragent',\n  platforms: ['Android', 'iOS']\n})\n\nexport class UserAgent extends IonicNativePlugin {\n\n  /**\n   * Changes the current user-agent to the one sent by argument.\n   * @param userAgent {string} User-Agent\n   * @return {Promise<any>} Returns a promise that resolves when the user-agent changes\n   */\n  @Cordova()\n  set(userAgent: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Returns the current user-agent string.\n   * @return {Promise<any>} Returns a promise that resolves when the user-agent is returned\n   */\n  @Cordova()\n  get(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Sets the user-agent back to default\n   * @return {Promise<any>} Returns a promise that resolves when the user-agent resets\n   */\n  @Cordova()\n  reset(): Promise<any> {\n    return;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}