{"version":3,"sources":["../../../src/@ionic-native/plugins/device-accounts/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;GAkBG;AASH;IAAoC,kCAAiB;IAArD;;IAoCA,CAAC;IAlCC;;;OAGG;IAEH,4BAAG,GAAH,cAAsB,MAAM,CAAC,CAAC,CAAC;IAE/B;;;OAGG;IAEH,kCAAS,GAAT,UAAU,IAAY,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEjD;;;OAGG;IAEH,kCAAS,GAAT,cAA4B,MAAM,CAAC,CAAC,CAAC;IAErC;;;OAGG;IAEH,iCAAQ,GAAR,cAA2B,MAAM,CAAC,CAAC,CAAC;IAE/B,yBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IA5BA;QADC,OAAO,EAAE;;;;6CACqB;IAO/B;QADC,OAAO,EAAE;;;;mDACuC;IAOjD;QADC,OAAO,EAAE;;;;mDAC2B;IAOrC;QADC,OAAO,EAAE;;;;kDAC0B;IA5BzB,cAAc;QAR1B,MAAM,CAAC;YACN,UAAU,EAAE,gBAAgB;YAC5B,MAAM,EAAE,yBAAyB;YACjC,SAAS,EAAE,wBAAwB;YACnC,IAAI,EAAE,uDAAuD;YAC7D,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;OAEW,cAAc,CAoC1B;IAAD,qBAAC;CApCD,AAoCC,CApCmC,iBAAiB,GAoCpD;SApCY,cAAc","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @name Device Accounts\n * @description\n * Gets the Google accounts associated with the Android device\n *\n * @usage\n * ```typescript\n * import { DeviceAccounts } from '@ionic-native/device-accounts';\n *\n * constructor(private deviceAccounts: DeviceAccounts) { }\n *\n * ...\n *\n * this.deviceAccounts.get()\n *   .then(accounts => console.log(accounts))\n *   .catch(error => console.error(error));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'DeviceAccounts',\n  plugin: 'cordova-device-accounts',\n  pluginRef: 'plugins.DeviceAccounts',\n  repo: 'https://github.com/danielsogl/cordova-device-accounts',\n  platforms: ['Android']\n})\n\nexport class DeviceAccounts extends IonicNativePlugin {\n\n  /**\n   *  Gets all accounts registered on the Android Device\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  get(): Promise<any> { return; }\n\n  /**\n   *  Get all accounts registered on Android device for requested type\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  getByType(type: string): Promise<any> { return; }\n\n  /**\n   *  Get all emails registered on Android device (accounts with 'com.google' type)\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  getEmails(): Promise<any> { return; }\n\n  /**\n   *  Get the first email registered on Android device\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  getEmail(): Promise<any> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}