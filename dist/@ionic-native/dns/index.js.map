{"version":3,"sources":["../../../src/@ionic-native/plugins/dns/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AACxE,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C;;;;;;;;;;;;;;;;;;;GAmBG;AASH;IAAyB,uBAAiB;IAA1C;;IAcA,CAAC;IAbC;;;;OAIG;IAEH,qBAAO,GAAP,UAAQ,QAAgB,IAAqB,MAAM,CAAC,CAAC,CAAC;IACjD,cAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,kBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IANA;QADC,OAAO,EAAE;;;;sCAC4C;IAP3C,GAAG;QARf,MAAM,CAAC;YACN,UAAU,EAAE,KAAK;YACjB,MAAM,EAAE,oBAAoB;YAC5B,SAAS,EAAE,qBAAqB;YAChC,IAAI,EAAE,iDAAiD;YACvD,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;OAEW,GAAG,CAcf;IAAD,UAAC;CAdD,AAcC,CAdwB,iBAAiB,GAczC;SAdY,GAAG","file":"index.js","sourceRoot":"","sourcesContent":["import { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n\n/**\n * @name DNS\n * @description A plugin for Apache Cordova that enables applications to manually resolve hostnames into an underlying network address. This is mostly useful for determining whether there is a problem with the device's DNS server configuration.\n *\n * @usage\n * ```typescript\n * import { DNS } from '@ionic-native/dns';\n *\n *\n * constructor(private dns: DNS) { }\n *\n * ...\n * this.dns.resolve(hostname)\n *   .then(\n *     address => console.log('Resolved ' + hostname + ' to ' + address),\n *     error => console.log('Failed to resolve ' + hostname + ': ' + error)\n *   );\n *\n * ```\n */\n@Plugin({\n  pluginName: 'DNS',\n  plugin: 'cordova-plugin-dns',\n  pluginRef: 'cordova.plugins.dns',\n  repo: 'https://bitbucket.org/zegeba/cordova-plugin-dns',\n  platforms: ['Android']\n})\n\nexport class DNS extends IonicNativePlugin {\n  /**\n   * Resolve hostnames into an underlying network address.\n   * @param hostname\n   * @returns {Promise<string>} Returns a promise that resolves with the resolution.\n   */\n  @Cordova()\n  resolve(hostname: string): Promise<string> { return; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}